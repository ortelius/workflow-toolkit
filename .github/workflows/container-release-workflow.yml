name: Container Release Workflow

on:
  workflow_call:
    inputs:
      gh_repository_owner:
        required: true
        type: string
      gh_event_name:
        required: true
        type: string
      gh_ref:
        required: true
        type: string
      registry:
        required: true
        type: string
      image_repo_tag:
        required: true
        type: string
      loaddata:
        required: false
        type: boolean
        default: false
      gh_handle:
        required: false
        type: string
        default: ""
    secrets:
      QUAY_USERID:
        required: true
      QUAY_PASSWORD:
        required: true
      gh_token:
        required: false
    outputs:
      digest:
        description: "Digest"
        value: ${{ jobs.release.outputs.digest }}

jobs:
  release:
    runs-on: ubuntu-latest

    outputs:
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after a couple of runs

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Checkout
        id: checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Install Cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3
        with:
          version: v0.14.0

      - name: Login to Quay
        if: ${{ inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main' }}
        id: login
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.QUAY_USERID }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4
        id: cache
        with:
          path: |
            mitre.joblib
          key: ${{ runner.os }}-${{ hashFiles('*.json') }}

      - name: setup python
        if: ${{ inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main' && inputs.loaddata && steps.cache.outputs.cache-hit != 'true' }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5
        with:
          python-version: 3.11

      - name: Install dependencies
        if: ${{ inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main' && inputs.loaddata && steps.cache.outputs.cache-hit != 'true'  }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.in

      - name: execute py script
        if: ${{ inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main' && inputs.loaddata && steps.cache.outputs.cache-hit != 'true'  }}
        run: |
          python main.py --loaddata

      - name: Build and Push Docker Image
        if: ${{ inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main' }}
        id: build
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          push: true
          tags: ${{ inputs.image_repo_tag }}
          platforms: linux/amd64,linux/arm64
          attests: type=provenance,type=sbom
        timeout-minutes: 100

      - name: Sign the images
        if: ${{ inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main' }}
        run: |
          cosign sign --yes ${{ inputs.image_repo_tag }}@${{ steps.build.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: Verify the pushed tags
        if: ${{ inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main' }}
        run: |
          cosign verify ${{ inputs.image_repo_tag }}@${{ steps.build.outputs.digest }} --certificate-identity-regexp 'https://github\.com/ortelius/workflow-toolkit/\.github/workflows/.+' --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' | jq "."
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: Swagger
        if: ${{ inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main' && env.GH_TOKEN != '' }}
        env:
          GH_TOKEN: ${{ secrets.gh_token }}
        run: |
          if [ -f "main.py" ] && grep -q '\[Discord\]' README.md; then
            git config user.name "${{ inputs.gh_handle }}"
            git config user.email "${{ inputs.gh_handle }}@users.noreply.github.com"
            npm install -g openapi-to-md
            docker run --name swagger -p 8080:8080 --rm -d "${{ inputs.image_repo_tag }}"
            sleep 5
            wget http://localhost:8080/openapi.json -O openapi.json
            docker stop swagger
            sed -i.bak "/\[Discord\]/q" README.md && openapi-to-md openapi.json | tail -n +2 >> README.md && rm README.md.bak
            git pull
            git add .
            git commit -m "update readme with latest swagger" || true
            git push
          elif [ -f "main.go" ]; then
            git config user.name "${{ inputs.gh_handle }}"
            git config user.email "${{ inputs.gh_handle }}@users.noreply.github.com"
            npm install -g openapi-to-md
            go install github.com/swaggo/swag/cmd/swag@latest
            "$HOME/go/bin/swag" init
            mv docs/swagger.json .
            rm docs/swagger.yaml
            openapi-to-md swagger.json > README.md
            git pull
            git add .
            git commit -m "update readme with latest swagger" || true
            git push
          fi
        shell: bash

      - name: Build Docker Image
        if: ${{ !(inputs.gh_repository_owner == 'ortelius' && inputs.gh_event_name == 'push' && inputs.gh_ref == 'refs/heads/main') }}
        id: build_only
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          tags: ${{ inputs.image_repo_tag }}
